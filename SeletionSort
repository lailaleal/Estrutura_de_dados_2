import random  # Importa módulo para gerar números aleatórios
import time    # Importa módulo para medir tempo de execução

def gera_array(n):  # Função para gerar array aleatório
    return [random.randint(0, 100) for _ in range(n)]  # Cria lista com n números entre 0 e 100

def selection_sort(array):  # Implementação do Selection Sort
    n = len(array)          # Obtém tamanho do array
    print("Array original:", array)  # Mostra array antes da ordenação
    
    for i in range(n):      # Loop externo: percorre cada posição
        menor = i           # Assume que o menor elemento está na posição atual (i)
        
        # Loop interno: procura o menor elemento no restante do array
        for j in range(i+1, n):           
            if array[j] < array[menor]:  # Se encontrar elemento menor
                menor = j                # Atualiza índice do menor elemento
        
        # Se o menor elemento não está na posição atual, faz a troca
        if menor != i:
            array[i], array[menor] = array[menor], array[i]  # Troca os elementos
        
        print(f"Iteração {i}:", array)  # Mostra array após cada iteração
    
    print("Array ordenado:", array)  # Mostra resultado final
    return array

def main():  # Função principal
    inicio = time.time()  # Inicia contagem do tempo
    
    n = 10  # Tamanho do array (pode ser alterado)
    arr = gera_array(n)  # Gera array aleatório
    
    print("\n=== SELECTION SORT ===")
    selection_sort(arr)  # Ordena o array
    
    fim = time.time()  # Finaliza contagem do tempo
    # Calcula e mostra tempo de execução
    print(f"\nTempo de execução: {fim - inicio:.6f} segundos")

if __name__ == "__main__":  # Verifica se é o programa principal
    main()  # Executa o programa